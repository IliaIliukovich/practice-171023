1. Переписать через стримы
     public static void feed(List<Cat> catList) {
           for (int i = 0; i < catList.size(); i++) {
               if (catList.get(i).isHungry()) {
                   catList.get(i).setHungry(false);
               }
           }
       }
2. Переписать через стримы
   	public static int getSum(List<Integer> integers) {
           int oddSum = 0;
           for(Integer i: integers) {
               if(i % 2 != 0) {
                   oddSum += i;
               }
           }
           return oddSum;
       }
3. Переписать через стримы
   	public static Map<Boolean, List<Integer>> getMap() {
           Map<Boolean, List<Integer>> map = new TreeMap<>();
           for (int i = 0; i < 100; i++) {
               if (i % 3 == 0) {
                   if (map.containsKey(true)) {
                       map.get(true).add(i);
                   } else {
                       map.put(true, new ArrayList<>());
                       map.get(true).add(i);
                   }
               } else {
                   if (map.containsKey(false)) {
                       map.get(false).add(i);
                   } else {
                       map.put(false, new ArrayList<>());
                       map.get(false).add(i);
                   }
               }
           }
           return map;
       }
   4. Дан список кошек
      Cat cat1 = new Cat("Tom", 2, "black", true);
      Cat cat2 = new Cat("Mikky", 1, "white", false);
      Cat cat3 = new Cat("Vasya", 3, "white", true);
      Cat cat4 = new Cat("Steve", 1, "grey", false);
      Cat cat5 = new Cat("Bob", 2, "black", true);
      List<Cat> catList = Arrays.asList(cat1, cat2, cat3, cat4, cat5);

      a. Получить Map<String, Boolean> имя / информация, голодна ли кошка
      b. Получить Map<String, Long> цвет / количество кошек данного цвета
      c. Получить Map<String, Set<String>> цвет / список имен кошек данного цвета
      d. Получить Map<Integer, Integer> возраст / количество голодных кошек данного возраста
